<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "c1"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
insert = strip.groups.whose({description:"Audio FX"})[0].groups[0]
insert.popUpButtons[0].click()
}

function double() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}

insert = strip
offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1

  insert.groups[offset].popUpButtons[0].click()
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>540849439.71383297</real>
				<key>ModificationDate</key>
				<real>543405744.00223005</real>
				<key>Name</key>
				<string>Assign Insert 1</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>18</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>80178D5D-15A4-4654-8249-BDB039C52EB7</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "c2"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1

if (insert.groups[offset].groups.length &gt; 1)
  insert.groups[offset].groups[1].popUpButtons[0].click()
else
 if (  insert.groups[offset].popUpButtons.length &gt;= 1)
  insert.groups[offset + 1].click()
}

function double() {
vo = Application("VoiceOver")

logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0]
offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1

if (insert.groups[offset].groups.length &gt; 1)
  insert.groups[offset].popUpButtons[1].click()
else
 if (  insert.groups[offset].popUpButtons.length &gt;= 1)
  insert.groups[offset + 1].click()

}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>540857368.08411801</real>
				<key>ModificationDate</key>
				<real>543405790.55572796</real>
				<key>Name</key>
				<string>Assign Insert 2</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>19</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>39EFAA86-502F-4F67-AB08-904B5B10AFA3</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "c3"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0]
offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1

if (insert.groups[offset].groups.length &gt; 2)
  insert.groups[offset].groups[2].popUpButtons[0].click()
else
 if (  insert.groups[offset].popUpButtons.length &gt;= 2)
  insert.groups[offset + 1].click()
}

function double() {
delay(.3)
vo = Application("VoiceOver")

logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0]
offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1

if (insert.groups[offset].groups.length &gt; 2)
  insert.groups[offset].popUpButtons[2].click()
else
if (  insert.groups[offset].popUpButtons.length &gt;= 2)
  insert.groups[offset + 1].click()
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>540890488.853549</real>
				<key>ModificationDate</key>
				<real>543330477.79576397</real>
				<key>Name</key>
				<string>Assign Insert 3</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>20</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>885B00EC-7F38-4B4B-B8DE-879DB8B7830E</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "c4"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0]
offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1

if (insert.groups[offset].groups.length &gt; 3)
  insert.groups[offset].groups[3].popUpButtons[0].click()
else
 if (  insert.groups[offset].popUpButtons.length &gt;= 3)
  insert.groups[offset + 1].click()
}

function double() {
vo = Application("VoiceOver")

logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0]
offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1
delay(.3)
if (insert.groups[offset].groups.length &gt; 3)
  insert.groups[offset].popUpButtons[3].click()
else
if (  insert.groups[offset].popUpButtons.length &gt;= 3)
  insert.groups[offset + 1].click()
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>540890650.54317904</real>
				<key>ModificationDate</key>
				<real>543330541.30284798</real>
				<key>Name</key>
				<string>Assign Insert 4</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>21</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>2B86E430-D83B-4DD9-9EEC-9E2001397C58</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "c5"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0]
offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1

if (insert.groups[offset].groups.length &gt; 4)
  insert.groups[offset].groups[4].popUpButtons[0].click()
else
 if (  insert.groups[offset].popUpButtons.length &gt;= 4)
  insert.groups[offset + 1].click()
}

function double() {
vo = Application("VoiceOver")

logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0]
offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1
delay(.3)
if (insert.groups[offset].groups.length &gt; 4)
  insert.groups[offset].popUpButtons[4].click()
else
if (  insert.groups[offset].popUpButtons.length &gt;= 4)
  insert.groups[offset + 1].click()
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>540890943.50365901</real>
				<key>ModificationDate</key>
				<real>543330637.13270104</real>
				<key>Name</key>
				<string>Assign Insert 5</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>23</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>B2D98883-7B10-46A8-A805-CB3E4FACBBB0</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "c6"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0]
offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1

if (insert.groups[offset].groups.length &gt; 5)
  insert.groups[offset].groups[5].popUpButtons[0].click()
else
 if (  insert.groups[offset].popUpButtons.length &gt;= 5)
  insert.groups[offset + 1].click()
}

function double() {
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0]
offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1
delay(.3)
if (insert.groups[offset].groups.length &gt; 5)
  insert.groups[offset].popUpButtons[5].click()
else
if ( insert.groups[offset].popUpButtons.length &gt;= 5)
  insert.groups[offset + 1].click()
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>541319752.59847796</real>
				<key>ModificationDate</key>
				<real>543330690.918944</real>
				<key>Name</key>
				<string>Assign insert 6</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>22</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>21E82352-A8B5-41DC-B0B6-8F402E64D8B1</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "c7"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0]
offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1

if (insert.groups[offset].groups.length &gt; 6)
  insert.groups[offset].groups[6].popUpButtons[0].click()
else
 if (  insert.groups[offset].popUpButtons.length &gt;= 6)
  insert.groups[offset + 1].click()
}

function double() {
vo = Application("VoiceOver")

logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0]
offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1
delay(.3)
if (insert.groups[offset].groups.length &gt; 6)
  insert.groups[offset].popUpButtons[6].click()
else
if (  insert.groups[offset].popUpButtons.length &gt;= 6)
  insert.groups[offset + 1].click()
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>541321009.81951404</real>
				<key>ModificationDate</key>
				<real>543330742.35143304</real>
				<key>Name</key>
				<string>Assign insert 7</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>26</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>4AB49817-7357-4F9F-8536-9EF47A652BC1</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "c8"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0]
offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1

if (insert.groups[offset].groups.length &gt; 7)
  insert.groups[offset].groups[7].popUpButtons[0].click()
else
 if (  insert.groups[offset].popUpButtons.length &gt;= 7)
  insert.groups[offset + 1].click()
}

function double() {
vo = Application("VoiceOver")

logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0]
offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1
delay(.3)
if (insert.groups[offset].groups.length &gt; 7)
  insert.groups[offset].popUpButtons[7].click()
else
if (  insert.groups[offset].popUpButtons.length &gt;= 7)
  insert.groups[offset + 1].click()
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>541321151.52525401</real>
				<key>ModificationDate</key>
				<real>543330936.84825206</real>
				<key>Name</key>
				<string>Assign insert 8</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>28</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>CC5234FF-8A33-459A-8E2D-6A1F9F560BC6</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "c9"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0]
offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1

if (insert.groups[offset].groups.length &gt; 8)
  insert.groups[offset].groups[8].popUpButtons[0].click()
else
 if (  insert.groups[offset].popUpButtons.length &gt;= 8)
  insert.groups[offset + 1].click()
}

function double() {
vo = Application("VoiceOver")

logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0]
offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1
delay(.3)
if (insert.groups[offset].groups.length &gt; 8)
  insert.groups[offset].popUpButtons[8].click()
else
if (  insert.groups[offset].popUpButtons.length &gt;= 8)
  insert.groups[offset + 1].click()
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>541321314.99185205</real>
				<key>ModificationDate</key>
				<real>543330996.31623495</real>
				<key>Name</key>
				<string>Assign insert 9</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>25</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>40E04F11-1AF1-480B-B264-6A553DA08E01</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0]
offset = 0
if (insert.groups[0].description() != "Audio FX")
offset = 1

last = insert.groups.whose({name:"Audio FX"})
if (last.length == 0)
  last = last[0].groups[0]
else last = last[0]
last.click()
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>541321421.90620506</real>
				<key>ModificationDate</key>
				<real>543363999.57636499</real>
				<key>Name</key>
				<string>Assign Next Available Insert Slot</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>29</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>7D64003D-3A37-461E-A5AC-5ED473E0C5A8</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "osr"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
tracks = window.groups[2].groups[1].splitterGroups[0].splitterGroups[1].scrollAreas[0].groups[0]
index = tracks.groups[0].checkboxes.description().indexOf("Record Enable")
sp = ObjectSpecifier().checkboxes[index].value
tracks = tracks.groups.whose({_match:[sp,1]}).description()
msg = ""
  


for (t in tracks) {
msg += tracks[t].match(/“(.*?)”/)[1]+", "
}
if (msg=="") msg = "No tracks are record enabled."
else msg = tracks.length+" record enabled: "+msg
vo.output(msg)
}

function double() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
tracks = window.groups[2].groups[1].splitterGroups[0].splitterGroups[1].scrollAreas[0].groups[0]
index = tracks.groups[0].checkboxes.description().indexOf("Record Enable")
sp = ObjectSpecifier().checkboxes[index].value
tracks = tracks.groups.whose({_match:[sp,1]}).checkboxes[index]()
for (t in tracks) {
tracks[t].click()
}
vo.output("Record disabled all tracks")
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>524188749.98473501</real>
				<key>ModificationDate</key>
				<real>542929439.37797797</real>
				<key>Name</key>
				<string>Beta: Speak Record Enabled Tracks/Record Disable All Tracks</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>15</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2560</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>9345CF6D-802D-4BCD-93FF-DD06F96097C6</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>kme = Application("Keyboard Maestro Engine")
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
value = strip.sliders.whose({description:"Fader"})[0].value()
verbosity = kme.getvariable("fgVerbosity")
if (verbosity == "long") msg = "Volume "
else msg = ""
msg += value
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>499553352.65371102</real>
				<key>ModificationDate</key>
				<real>543406268.09385896</real>
				<key>Name</key>
				<string>Beta: Speak Volume</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>9</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>8396232B-B7FE-40EC-9955-8229EE0DBBD2</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
obj = window.groups.whose({description:"Control Bar"}).checkboxes.byName("Cycle")
obj.click()
value = obj.value()
if (Application("Keyboard Maestro Engine").getvariable("fgVerbosity") == "long") msg = "Cycle "
else msg = ""
if (value == 0) msg += "off"
else msg += "on"
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>504407929.39738297</real>
				<key>ModificationDate</key>
				<real>534412893.07738501</real>
				<key>Name</key>
				<string>Beta: Toggle Cycle</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>8</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>768</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>84AA8429-7402-4E23-96EF-B44745F52F64</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>kme = Application("Keyboard Maestro Engine")
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
obj = strip.sliders.whose({_not:[{description:"Fader"}]})[0]
obj.decrement()
value = obj.value()
verbosity = kme.getvariable("fgVerbosity")
if (verbosity == "long") msg = "Pan: "
else msg = ""
msg += value
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>524317094.12898701</real>
				<key>ModificationDate</key>
				<real>543406314.36579895</real>
				<key>Name</key>
				<string>Decrease Pan</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>123</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>69FE0576-ADA1-4899-953D-D231F7E7A7DB</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>kme = Application("Keyboard Maestro Engine")
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
obj = strip.sliders.whose({description:"Fader"})[0]
obj.decrement()
value = obj.value()
verbosity = kme.getvariable("fgVerbosity")
if (verbosity == "long") msg = "Volume "
else msg = ""
msg += value
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>524316957.470954</real>
				<key>ModificationDate</key>
				<real>543406402.14014494</real>
				<key>Name</key>
				<string>Decrease Volume</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>125</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>D653DF62-E632-4BD8-A66D-653A1EEF38E1</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
app = Application.currentApplication()
app.includeStandardAdditions = true
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]

trackHeaderGroup = window.groups[2].groups[1].splitterGroups[0].splitterGroups[1].scrollAreas[0].groups[0]
foundIndex = -1

  trackName =app.displayDialog('Find Track', {defaultAnswer:"5"}).textReturned.toLowerCase() 
Application("Logic Pro X").activate()
 delay(.5)

for ( i = 0; i&lt; trackHeaderGroup.groups.length;i++)
{
if (trackHeaderGroup.groups[i].description().toLowerCase().indexOf(trackName) &gt;= 0)
{
foundIndex = i
break
}
}

if (foundIndex &gt;= 0)
{
 trackHeaderGroup.groups[foundIndex].click()
}
else
vo.output("Track not found")</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>542118501.83762395</real>
				<key>ModificationDate</key>
				<real>542164503.59356201</real>
				<key>Name</key>
				<string>Find Track</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>3</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2560</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>ACF4BA35-1B6B-4A99-B678-B6B5AD6F0B04</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>kme = Application("Keyboard Maestro Engine")
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
obj = strip.sliders.whose({_not:[{description:"Fader"}]})[0]
obj.increment()
value = obj.value()
verbosity = kme.getvariable("fgVerbosity")
if (verbosity == "long") msg = "Pan: "
else msg = ""
msg += value
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>524317302.40687901</real>
				<key>ModificationDate</key>
				<real>543406350.72913003</real>
				<key>Name</key>
				<string>Increase Pan</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>124</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>8B5848D9-54BA-45CA-A34F-1D63775D9C93</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>kme = Application("Keyboard Maestro Engine")
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
obj = strip.sliders.whose({description:"Fader"})[0]
obj.increment()
value = obj.value()
verbosity = kme.getvariable("fgVerbosity")
if (verbosity == "long") msg = "Volume "
else msg = ""
msg += value
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>524316626.78913403</real>
				<key>ModificationDate</key>
				<real>543406421.86430597</real>
				<key>Name</key>
				<string>Increase Volume</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>126</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>1031644E-15EC-442C-B14F-F8C480EED0E8</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
strip.groups[strip.groups.length-1].popUpButtons[0].click()
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>543363599.91316998</real>
				<key>ModificationDate</key>
				<real>543404888.91841805</real>
				<key>Name</key>
				<string>Select Instrument Plugin</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>34</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>BB7E9BFE-16ED-4393-ABCE-171D9475B229</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>KeyCode</key>
						<integer>47</integer>
						<key>MacroActionType</key>
						<string>SimulateKeystroke</string>
						<key>Modifiers</key>
						<integer>4352</integer>
						<key>ReleaseAll</key>
						<false/>
						<key>TargetApplication</key>
						<dict/>
						<key>TargetingType</key>
						<string>Front</string>
					</dict>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
obj = window.groups[0].groups[0].popUpButtons.whose({help:{_contains:"Division display."}})[0]
msg = ""+obj.value()+", Division"
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>543440712.04475796</real>
				<key>ModificationDate</key>
				<real>543440827.73105395</real>
				<key>Name</key>
				<string>Set Next Higher Division</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>47</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>4352</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>6E43894B-6269-4DA2-8FB8-4A1572162119</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>KeyCode</key>
						<integer>43</integer>
						<key>MacroActionType</key>
						<string>SimulateKeystroke</string>
						<key>Modifiers</key>
						<integer>4352</integer>
						<key>ReleaseAll</key>
						<false/>
						<key>TargetApplication</key>
						<dict/>
						<key>TargetingType</key>
						<string>Front</string>
					</dict>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
obj = window.groups[0].groups[0].popUpButtons.whose({help:{_contains:"Division display."}})[0]
msg = ""+obj.value()+", Division"
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>543440834.43560398</real>
				<key>ModificationDate</key>
				<real>543440850.106112</real>
				<key>Name</key>
				<string>Set Next Lower Division</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>43</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>4352</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>A0A1F4B3-7D8A-49E4-A6B5-DCA9587D953D</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
value = strip.textFields[0].description().replace(/, name$/, "")
vo.output(""+value)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>499548605.26653099</real>
				<key>ModificationDate</key>
				<real>543406917.81629705</real>
				<key>Name</key>
				<string>Speak Current Track</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>17</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>B048A493-C44C-486F-9D8E-68BE3CA6B760</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "osi"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
tracks = window.groups[2].groups[1].splitterGroups[0].splitterGroups[1].scrollAreas[0].groups[0]
index = tracks.groups[0].checkboxes.description().indexOf("Input Monitor")
sp = ObjectSpecifier().checkboxes[index].value
tracks = tracks.groups.whose({_match:[sp,1]}).description()
msg = ""
for (t in tracks) {
msg += tracks[t].match(/“(.*?)”/)[1]+", "
}
if (msg=="") msg = "No tracks are input monitor enabled."
else msg = tracks.length+" input monitor enabled: "+msg
vo.output(msg)
}

function double() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
tracks = window.groups[2].groups[1].splitterGroups[0].splitterGroups[1].scrollAreas[0].groups[0]
index = tracks.groups[0].checkboxes.description().indexOf("Input Monitor")
sp = ObjectSpecifier().checkboxes[index].value
tracks = tracks.groups.whose({_match:[sp,1]}).checkboxes[index]()
for (t in tracks) {
tracks[t].click()
}
vo.output("Disabled input monitor for all tracks")
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>524194280.16812903</real>
				<key>ModificationDate</key>
				<real>524300492.93814802</real>
				<key>Name</key>
				<string>Speak Input Monitor Enabled Tracks/Disable Input Monitor All Tracks</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>34</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2560</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>F6962EA6-450D-49D9-9922-B9DCD72FC9CB</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
sliders = window.groups[0].groups[0].groups[2].sliders()
msg = ""
for (s in sliders) {
msg+=sliders[s].description()+" "+sliders[s].value()+", "
}
msg += "Left Locator"
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>499542082.32662898</real>
				<key>ModificationDate</key>
				<real>524300541.59568602</real>
				<key>Name</key>
				<string>Speak Left Locator</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>120</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>76FB268D-3C6D-4211-B5EF-E26936C1D8D2</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "osm"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})
if (mixer.length &gt; 0) {
strips = mixer[0].groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
index = strips[0].checkboxes.name().indexOf("Mute")
sp = ObjectSpecifier().checkboxes[index].value
tracks = strips.whose({_match:[sp,1]}).description()
msg = ""
for (t in tracks) {
msg += tracks[t]+", "
}
} else {
tracksArea = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Tracks"]})[0]
strips = tracksArea.groups[1].splitterGroups[0].splitterGroups[1].scrollAreas[0].groups[0].groups
index = strips[0].checkboxes.description().indexOf("Mute")
sp = ObjectSpecifier().checkboxes[index].value
tracks = strips.whose({_match:[sp,1]}).description()
msg = ""
for (t in tracks) {
msg += tracks[t].match(/“(.*?)”/)[1]+", "
}
}
if (msg=="") msg = "No tracks are muted."
else msg = tracks.length+" muted: "+msg
vo.output(msg)
}

function double() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})
if (mixer.length &gt; 0) {
strips = mixer[0].groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
index = strips[0].checkboxes.name().indexOf("Mute")
} else {
tracksArea = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Tracks"]})[0]
strips = tracksArea.groups[1].splitterGroups[0].splitterGroups[1].scrollAreas[0].groups[0].groups
index = strips[0].checkboxes.description().indexOf("Mute")
}
sp = ObjectSpecifier().checkboxes[index].value
tracks = strips.whose({_match:[sp,1]}).checkboxes[index]()
for (t in tracks) {
tracks[t].click()
}
vo.output("Unmuted all tracks")
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>489906430.29756999</real>
				<key>ModificationDate</key>
				<real>543422939.292732</real>
				<key>Name</key>
				<string>Speak Muted Tracks/Unmute All Tracks</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>46</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2560</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>3DBC5713-853F-444B-A526-92B1F2A8F283</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>kme = Application("Keyboard Maestro Engine")
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
value = strip.sliders.whose({_not:[{description:"Fader"}]})[0].value()
verbosity = kme.getvariable("fgVerbosity")
if (verbosity == "long") msg = "Pan: "
else msg = ""
msg += value
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>524517480.09372503</real>
				<key>ModificationDate</key>
				<real>543406970.02836704</real>
				<key>Name</key>
				<string>Speak Pan</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>45</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>2D752FEC-EBEF-4B9F-AED4-FD602647C814</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
description = window.groups[0].groups[0].groups[0].description()
sliders = window.groups[0].groups[0].groups[0].sliders()
msg = ""
for (s in sliders) {
msg+=sliders[s].description()+" "+sliders[s].value()+", "
}
msg += description
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>499539582.64421701</real>
				<key>ModificationDate</key>
				<real>524300578.91432101</real>
				<key>Name</key>
				<string>Speak Playhead Position</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>122</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>3BEC1B6F-80CC-4809-AEFE-697F075EC09A</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
description = window.groups[0].groups[0].groups[1].description()
sliders = window.groups[0].groups[0].groups[1].sliders()
msg = ""
for (s in sliders) {
msg+=sliders[s].description()+" "+sliders[s].value()+", "
}
msg += description
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>499545345.661502</real>
				<key>ModificationDate</key>
				<real>524300618.22163498</real>
				<key>Name</key>
				<string>Speak Playhead Position Alternate</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>118</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>040ED51F-8D13-4BF3-9021-02CD12555B5E</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
sliders = window.groups[0].groups[0].groups[3].sliders()
msg = ""
for (s in sliders) {
msg+=sliders[s].description()+" "+sliders[s].value()+", "
}
msg += "Right Locator"
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>499545107.58686203</real>
				<key>ModificationDate</key>
				<real>524300902.45265102</real>
				<key>Name</key>
				<string>Speak Right Locator</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>99</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>E19FF91E-D58D-4D9A-A0CD-804364B72969</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]
sp = ObjectSpecifier().staticTexts[0].name
value = group.lists[0].groups.whose({_match:[sp,{_equals:"Region:"}]}).textFields[0].value()
if (value == "") {
value = group.lists[0].groups.whose({_match:[sp,{_equals:"Region:"}]}).staticTexts[1].name()
}
msg = ""+value
vo.output(value)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>499547096.50015402</real>
				<key>ModificationDate</key>
				<real>524517869.49524701</real>
				<key>Name</key>
				<string>Speak Selected Region</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>15</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>4B40FF8C-A35F-4591-9E2F-AAF5DD3A3E58</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "oss"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})
if (mixer.length &gt; 0) {
strips = mixer[0].groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
index = strips[0].checkboxes.name().indexOf("Solo")
sp = ObjectSpecifier().checkboxes[index].value
tracks = strips.whose({_match:[sp,1]}).description()
msg = ""
for (t in tracks) {
msg += tracks[t]+", "
}
} else {
tracksArea = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Tracks"]})[0]
strips = tracksArea.groups[1].splitterGroups[0].splitterGroups[1].scrollAreas[0].groups[0].groups
index = strips[0].checkboxes.description().indexOf("Solo")
sp = ObjectSpecifier().checkboxes[index].value
tracks = strips.whose({_match:[sp,1]}).description()
msg = ""
for (t in tracks) {
msg += tracks[t].match(/“(.*?)”/)[1]+", "
}
}
if (msg=="") msg = "No tracks are soloed."
else msg = tracks.length+" soloed: "+msg
vo.output(msg)
}

function double() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})
if (mixer.length &gt; 0) {
strips = mixer[0].groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
index = strips[0].checkboxes.name().indexOf("Solo")
} else {
tracksArea = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Tracks"]})[0]
strips = tracksArea.groups[1].splitterGroups[0].splitterGroups[1].scrollAreas[0].groups[0].groups
index = strips[0].checkboxes.description().indexOf("Solo")
}
sp = ObjectSpecifier().checkboxes[index].value
tracks = strips.whose({_match:[sp,1]}).checkboxes[index]()
for (t in tracks) {
tracks[t].click()
}
vo.output("Unsoloed all tracks")
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>524089506.15395403</real>
				<key>ModificationDate</key>
				<real>543423342.11302304</real>
				<key>Name</key>
				<string>Speak Soloed Tracks/Unsolo All Tracks</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>1</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2560</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>1F804C19-3E25-4F5A-83C2-00B787124A56</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "l"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
value = strip.buttons.whose({name:{_endsWith:"clip level"}})[0].name()
msg = ""+value.replace(", clip level","")
vo.output(msg)
}

function double() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
obj = strip.buttons.whose({name:{_endsWith:"clip level"}})[0]
obj.click()
value = obj.name()
msg = ""+value.replace(", clip level","")
vo.output(msg)
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>499551222.87871099</real>
				<key>ModificationDate</key>
				<real>543407091.60972703</real>
				<key>Name</key>
				<string>Speak/Reset Clip Level</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>37</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>46DB4BE6-0F91-4D55-BA43-1917A948A49C</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "cf6"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
obj = window.groups.whose({description:{_contains:"Control Bar"}})[0].groups.whose({description:{_contains:"Control Bar"}})[0].popUpButtons.whose({help:{_contains:"Display Mode pop-up menu"}})[0]
msg = ""+obj.value()
vo.output(msg)
}

function double() {
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
window.groups.whose({description:{_contains:"Control Bar"}})[0].groups.whose({description:{_contains:"Control Bar"}})[0].popUpButtons.whose({help:{_contains:"Display Mode pop-up menu"}})[0].click()
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>524117605.19872898</real>
				<key>ModificationDate</key>
				<real>524301106.31013501</real>
				<key>Name</key>
				<string>Speak/Select Display Mode</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>111</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>51DBD0CB-5C1C-46BC-B83B-4973EDD97F6E</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "cf6"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
obj = window.groups[0].groups[0].popUpButtons.whose({help:{_contains:"Division display."}})[0]
msg = ""+obj.value()+", Division"
vo.output(msg)
}

function double() {
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
window.groups[0].groups[0].popUpButtons[2].click()
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>499545504.50963801</real>
				<key>ModificationDate</key>
				<real>543440656.86305702</real>
				<key>Name</key>
				<string>Speak/Select Division Value</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>97</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>A78CF407-6C76-43A0-B607-21EBD33B81BC</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "g"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
value = strip.popUpButtons.whose({name:{_contains:"Group"}})[0].name()
vo.output(""+value)
}

function double() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
strip.popUpButtons.whose({name:{_contains:"Group"}})[0].click()
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>499645317.75343698</real>
				<key>ModificationDate</key>
				<real>543407141.30271995</real>
				<key>Name</key>
				<string>Speak/Select Group</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>5</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>0DDEDAB6-0F52-4CCC-8EE9-B599C14C258E</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "i"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
try {
value = strip.popUpButtons[3].name()
} catch(err) {
value = strip.groups[strip.groups.length-1].name()
}
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
try {
value = strip.popUpButtons[4].name()
} catch(err) {
value = strip.groups[strip.groups.length-1].name()
}
}
vo.output(""+value)
}

function double() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
try {
strip.popUpButtons[3].click()
} catch (err) {
strip.groups[strip.groups.length-1].buttons[0].click()
}
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
try {
strip.popUpButtons[4].click()
} catch (err) {
strip.groups[strip.groups.length-1].buttons[0].click()
}
}
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>499644803.65713799</real>
				<key>ModificationDate</key>
				<real>543404753.88217998</real>
				<key>Name</key>
				<string>Speak/Select Input</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>34</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>9DFF8CE3-56A0-47C8-BC5F-2382ECEA5D60</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "1"

logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

firstInsert = group.lists[0].lists[0].groups[0].groups.whose({description:"Audio FX"})[0].groups[0]



function single()
{

 vo = Application("VoiceOver")

 if (firstInsert.description() == "")
vo.output("No insert")
 else
vo.output(firstInsert.description())
}

function double()
{
if (firstInsert.description() == "")
firstInsert.click()
else
firstInsert.buttons[0].click() 



}



kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>540760435.39423394</real>
				<key>ModificationDate</key>
				<real>541092790.68146598</real>
				<key>Name</key>
				<string>Speak/Select Insert 1</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>18</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>765A384D-4B6F-4909-A77E-68FBCA215941</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "2"

logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

firstInsert = group.lists[0].lists[0].groups[0].groups.whose({description:"Audio FX"})[0].groups[1]

function single()
{
vo = Application("VoiceOver")

if (firstInsert.description() == "")
vo.output("No insert")
else
vo.output(firstInsert.description())

}

function double()
{
if (firstInsert.description() == "")
firstInsert.click()
else
firstInsert.buttons[0].click()  
}



kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>540831243.08346796</real>
				<key>ModificationDate</key>
				<real>541093214.221053</real>
				<key>Name</key>
				<string>Speak/Select Insert 2</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>19</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>BDE6D828-EDA4-4966-BC29-FCF2D9F42848</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "3"
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0].groups.whose({description:"Audio FX"})[0].groups[2]



function single()
{
vo = Application("VoiceOver")

if (insert.description() == "")
vo.output("No insert")
else
vo.output(insert.description())
}

function double()
{
if (insert.description() == "")
insert.click()
else
insert.buttons[0].click()  
}



kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>540837740.88370502</real>
				<key>ModificationDate</key>
				<real>541093577.29758096</real>
				<key>Name</key>
				<string>Speak/Select Insert 3</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>20</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>2A787E32-599C-4FBB-B07E-19C5D639D793</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "4"
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0].groups.whose({description:"Audio FX"})[0].groups[3]

function single()
{
vo = Application("VoiceOver")

if (insert.description() == "")
vo.output("No insert")
else
vo.output(insert.description())
}

function double()
{
if (insert.description() == "")
insert.click()
else
insert.buttons[0].click()  
}



kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>540846440.76347005</real>
				<key>ModificationDate</key>
				<real>541093888.17815006</real>
				<key>Name</key>
				<string>Speak/Select Insert 4</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>21</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>18DA1AAA-5266-442F-BC50-C3FA6D342E53</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "5"
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0].groups.whose({description:"Audio FX"})[0].groups[4]


function single()
{
vo = Application("VoiceOver")

if (insert.description() == "")
vo.output("No insert")
else
vo.output(insert.description())
}

function double()
{
if (insert.description() == "")
insert.click()
else
insert.buttons[0].click()  
}



kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>540847297.79694498</real>
				<key>ModificationDate</key>
				<real>541093963.86904097</real>
				<key>Name</key>
				<string>Speak/Select Insert 5</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>23</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>A8263686-B722-4D0C-8B41-CDDCD20EEDDC</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "6"
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0].groups.whose({description:"Audio FX"})[0].groups[5]


function single()
{
vo = Application("VoiceOver")

if (insert.description() == "")
vo.output("No insert")
else
vo.output(insert.description())
}

function double()
{
if (insert.description() == "")
insert.click()
else
insert.buttons[0].click()  
}



kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>541085180.14555097</real>
				<key>ModificationDate</key>
				<real>541282172.191149</real>
				<key>Name</key>
				<string>Speak/Select Insert 6</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>22</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>C3A4F7FC-046B-4B39-8319-8059DF8A7E60</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "7"
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0].groups.whose({description:"Audio FX"})[0].groups[6]


function single()
{
vo = Application("VoiceOver")

if (insert.description() == "")
vo.output("No insert")
else
vo.output(insert.description())
}

function double()
{
if (insert.description() == "")
insert.click()
else
insert.buttons[0].click()  
}



kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>541282893.10020399</real>
				<key>ModificationDate</key>
				<real>541283205.704808</real>
				<key>Name</key>
				<string>Speak/Select insert 7</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>26</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>5571F573-F00C-447D-9D04-76C4A3F0274C</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "8"
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0].groups.whose({description:"Audio FX"})[0].groups[7]

function single()
{
vo = Application("VoiceOver")

if (insert.description() == "")
vo.output("No insert")
else
vo.output(insert.description())
}

function double()
{
if (insert.description() == "")
insert.click()
else
insert.buttons[0].click()  
}



kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>541285168.67861795</real>
				<key>ModificationDate</key>
				<real>541285385.77532303</real>
				<key>Name</key>
				<string>Speak/Select insert 8</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>28</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>80691814-9A58-4A5F-A14E-0D7F1B63EB57</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "9"
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0].groups.whose({description:"Audio FX"})[0].groups[8]

function single()
{
vo = Application("VoiceOver")

if (insert.description() == "")
vo.output("No insert")
else
vo.output(insert.description())
}

function double()
{
if (insert.description() == "")
insert.click()
else
insert.buttons[0].click()  
}



kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>541378456.68390095</real>
				<key>ModificationDate</key>
				<real>541378561.91672599</real>
				<key>Name</key>
				<string>Speak/Select insert 9</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>25</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>63495DB0-E227-40D7-97A4-7E0E1C37BABD</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<false/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "8"
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")

window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
group = window.groups.whose({description:"Inspector"})[0]

insert = group.lists[0].lists[0].groups[0].groups.whose({description:"Audio FX"})[0].groups[9]

function single()
{
vo = Application("VoiceOver")

if (insert.description() == "")
vo.output("No insert")
else
vo.output(insert.description())
}

function double()
{
if (insert.description() == "")
insert.click()
else
insert.buttons[0].click()  
}



kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>541378638.29650104</real>
				<key>ModificationDate</key>
				<real>541378715.52960098</real>
				<key>Name</key>
				<string>Speak/Select insert 10</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>29</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>D936F141-02EB-4F58-9AA3-7CB9B3796818</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "o"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
if (strip.popUpButtons.length &gt; 2)
obj = strip.popUpButtons[2]
else obj = strip.popUpButtons[1]
value = obj.name()
vo.output(""+value)
}

function double() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
if (strip.popUpButtons.length &gt; 2)
obj = strip.popUpButtons[2]
else obj = strip.popUpButtons[1]
obj.click()
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>499644545.45245498</real>
				<key>ModificationDate</key>
				<real>543404277.66030598</real>
				<key>Name</key>
				<string>Speak/Select Output</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>31</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>D5BE1D66-C564-4670-924E-6398524B2A66</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "p"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
value = strip.buttons[0].name()
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
value = strip.popUpButtons[0].name()
}

vo.output(""+value)
}

function double() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
strip.buttons[0].click()
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
strip.popUpButtons[0].click()
}
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>499645164.66727</real>
				<key>ModificationDate</key>
				<real>543403762.86502898</real>
				<key>Name</key>
				<string>Speak/Select Preset</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>35</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>CC7FE064-1201-4495-B9CC-DA53889A0A5B</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "m"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
value = strip.checkboxes["Mute"].value()
verbosity = kme.getvariable("fgVerbosity")
if (verbosity == "long") msg = "Mute "
else msg = ""
if (value == 1) msg += "On"
else msg += "Off"
vo.output(msg)
}

function double() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
checkbox = strip.checkboxes["Mute"]
checkbox.click()
value = checkbox.value()
verbosity = kme.getvariable("fgVerbosity")
if (verbosity == "long") msg = "Mute "
else msg = ""
if (value == 1) msg += "On"
else msg += "Off"
vo.output(msg)
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>499549905.49280399</real>
				<key>ModificationDate</key>
				<real>543402821.975178</real>
				<key>Name</key>
				<string>Speak/Toggle Mute</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>46</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>1C6F725D-41F5-44CF-9E2E-EC2D2BA5F5EA</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499546191.00478101</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>currentCommand = "s"

function single() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
value = strip.checkboxes["Solo"].value()
verbosity = kme.getvariable("fgVerbosity")
if (verbosity == "long") msg = "Solo "
else msg = ""
if (value == 1) msg += "On"
else msg += "Off"
vo.output(msg)
}

function double() {
vo = Application("VoiceOver")
logic = Application("System Events").applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
text = vo.voCursor.textUnderCursor()
if (text.indexOf("channel strip group") &gt; -1) {
mixerWindow = logic.windows.whose({name:{_endsWith:" - Mixer: Tracks"}})
if (mixerWindow.length&gt;0)
window = mixerWindow[0]
mixer = window.groups.whose({_match:[ObjectSpecifier().groups[1].description,"Mixer"]})[0]
strips = mixer.groups[1].splitterGroups[0].splitterGroups[0].lists[0].groups
strip = strips.whose({description:text.replace(" channel strip group", "")})[0]
} else {
inspector = window.groups.whose({description:"Inspector"})[0]
strip = inspector.lists[0].lists[0].groups.whose({roleDescription:"channel strip group"})[0]
}
checkbox = strip.checkboxes["Solo"]
checkbox.click()
value = checkbox.value()
verbosity = kme.getvariable("fgVerbosity")
if (verbosity == "long") msg = "Solo "
else msg = ""
if (value == 1) msg += "On"
else msg += "Off"
vo.output(msg)
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>499551018.94458997</real>
				<key>ModificationDate</key>
				<real>543425404.08473301</real>
				<key>Name</key>
				<string>Speak/Toggle Solo</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>1</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>9B1F2874-0532-4039-855D-13FD99ADBEDF</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>9749998D-2FB3-4417-B4AB-A3A8D60962C2</string>
		<key>UID</key>
		<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>MacroActionType</key>
						<string>SetVariableToText</string>
						<key>Text</key>
						<string>%ExecutingMacroUUID%</string>
						<key>Variable</key>
						<string>MacroID</string>
					</dict>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
sys = Application("System Events")
logic = sys.applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
try {
obj = window.groups.whose({description:"Control Bar"}).buttons.byName("Autopunch")
obj.click()
} catch (err) {
kme = Application("Keyboard Maestro Engine")
id = kme.getvariable("MacroID")
script = '&lt;array&gt;&lt;dict&gt;&lt;key&gt;Action&lt;/key&gt;&lt;string&gt;Disable&lt;/string&gt;&lt;key&gt;MacroActionType&lt;/key&gt;&lt;string&gt;SetMacroEnable&lt;/string&gt;&lt;key&gt;MacroUID&lt;/key&gt;&lt;string&gt;'+id+'&lt;/string&gt;&lt;/dict&gt;&lt;/array&gt;'
kme.doScript(script)
sys.keystroke("p", {using:["control down", "command down", "option down"]})
script = '&lt;array&gt;&lt;dict&gt;&lt;key&gt;Action&lt;/key&gt;&lt;string&gt;Enable&lt;/string&gt;&lt;key&gt;MacroActionType&lt;/key&gt;&lt;string&gt;SetMacroEnable&lt;/string&gt;&lt;key&gt;MacroUID&lt;/key&gt;&lt;string&gt;'+id+'&lt;/string&gt;&lt;/dict&gt;&lt;/array&gt;'
kme.doScript(script)
}
value = obj.value()
if (Application("Keyboard Maestro Engine").getvariable("fgVerbosity") == "long") msg = "Autopunch "
else msg = ""
if (value == 0) msg += "off"
else msg += "on"
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>533091633.37906802</real>
				<key>ModificationDate</key>
				<real>534412478.91116601</real>
				<key>Name</key>
				<string>Toggle Auto Punch</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>35</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>6400</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>BEC31043-FA04-4646-9008-ECA460E65AC2</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>ConditionType</key>
									<string>Macro</string>
									<key>MacroConditionType</key>
									<string>IsInactive</string>
									<key>MacroUID</key>
									<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayToggle</key>
								<false/>
								<key>MacroActionType</key>
								<string>MacroGroupToggle</string>
								<key>MacroGroupUID</key>
								<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
								<key>ToggleMode</key>
								<string>Deactivate</string>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteJavaScriptForAutomation</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>if (Application("Keyboard Maestro Engine").getvariable("fgVerbosity") == "long") msg = "Inspector off"
else msg = "off"
Application("VoiceOver").output(msg)
</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>DisplayToggle</key>
								<false/>
								<key>MacroActionType</key>
								<string>MacroGroupToggle</string>
								<key>MacroGroupUID</key>
								<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
								<key>ToggleMode</key>
								<string>Activate</string>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>None</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteJavaScriptForAutomation</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>if (Application("Keyboard Maestro Engine").getvariable("fgVerbosity") == "long") msg = "Inspector on"
else msg = "On"
Application("VoiceOver").output(msg)
</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>494579480.78613901</real>
				<key>ModificationDate</key>
				<real>541887734.51920795</real>
				<key>Name</key>
				<string>Toggle INspector</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>44</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>512</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>2F4782D1-E2A5-44BE-AC7A-7EDBF7AA9471</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>Conditions</key>
						<dict>
							<key>ConditionList</key>
							<array>
								<dict>
									<key>ConditionType</key>
									<string>Key</string>
									<key>KeyCode</key>
									<integer>50</integer>
									<key>KeyConditionType</key>
									<string>Down</string>
								</dict>
							</array>
							<key>ConditionListMatch</key>
							<string>All</string>
						</dict>
						<key>ElseActions</key>
						<array>
							<dict>
								<key>DisplayToggle</key>
								<false/>
								<key>MacroActionType</key>
								<string>MacroGroupToggle</string>
								<key>MacroGroupUID</key>
								<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
								<key>ToggleMode</key>
								<string>Deactivate</string>
							</dict>
							<dict>
								<key>DisplayKind</key>
								<string>Window</string>
								<key>IncludeStdErr</key>
								<true/>
								<key>MacroActionType</key>
								<string>ExecuteJavaScriptForAutomation</string>
								<key>NotifyOnFailure</key>
								<false/>
								<key>Path</key>
								<string></string>
								<key>StopOnFailure</key>
								<false/>
								<key>Text</key>
								<string>currentCommand = "`"
kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
script = `&lt;array&gt;
	&lt;dict&gt;
		&lt;key&gt;DisplayToggle&lt;/key&gt;
		&lt;false/&gt;
		&lt;key&gt;MacroActionType&lt;/key&gt;
		&lt;string&gt;MacroGroupToggle&lt;/string&gt;
		&lt;key&gt;MacroGroupUID&lt;/key&gt;
		&lt;string&gt;64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9&lt;/string&gt;
		&lt;key&gt;ToggleMode&lt;/key&gt;
		&lt;string&gt;Toggle&lt;/string&gt;
	&lt;/dict&gt;
&lt;/array&gt;`
Application("VoiceOver").output("Inspector On")
kme.doScript(script)
kme.playSound(Path("/System/Library/Sounds/Tink.aiff"))
}
</string>
								<key>TimeOutAbortsMacro</key>
								<true/>
								<key>TrimResults</key>
								<true/>
								<key>TrimResultsNew</key>
								<true/>
								<key>UseText</key>
								<true/>
							</dict>
						</array>
						<key>MacroActionType</key>
						<string>IfThenElse</string>
						<key>ThenActions</key>
						<array>
							<dict>
								<key>DisplayToggle</key>
								<false/>
								<key>MacroActionType</key>
								<string>MacroGroupToggle</string>
								<key>MacroGroupUID</key>
								<string>64EAC9F9-2720-4CE3-99DE-8A54F07FC4E9</string>
								<key>ToggleMode</key>
								<string>Activate</string>
							</dict>
						</array>
						<key>TimeOutAbortsMacro</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>533998645.120296</real>
				<key>ModificationDate</key>
				<real>543370093.80726695</real>
				<key>Name</key>
				<string>Toggle INspector</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>50</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
					<dict>
						<key>FireType</key>
						<string>Released</string>
						<key>KeyCode</key>
						<integer>50</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>4FBC39D6-B10A-4D91-AD44-37E6998444E8</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
sys = Application("System Events")
logic = sys.applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
obj = window.groups.whose({description:"Control Bar"}).buttons.byName("Replace")
obj.click()
value = obj.value()
if (Application("Keyboard Maestro Engine").getvariable("fgVerbosity") == "long") msg = "Replace mode "
else msg = ""
if (value == 0) msg += "off"
else msg += "on"
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>533093566.45330203</real>
				<key>ModificationDate</key>
				<real>534412053.64351201</real>
				<key>Name</key>
				<string>Toggle Replace</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>15</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>6400</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>F58607BF-0506-46E0-BE86-240A1C04F74B</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
sys = Application("System Events")
logic = sys.applicationProcesses.byName("Logic Pro X")
window = logic.windows.whose({name:{_endsWith:" - Tracks"}})[0]
obj = window.groups.whose({description:"Control Bar"}).buttons.byName("Solo")
obj.click()
value = obj.value()
if (Application("Keyboard Maestro Engine").getvariable("fgVerbosity") == "long") msg = "Solo Mode "
else msg = ""
if (value == 0) msg += "off"
else msg+= "on"
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>533093158.60092402</real>
				<key>ModificationDate</key>
				<real>534411984.06436503</real>
				<key>Name</key>
				<string>Toggle Solo Mode</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>1</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>4096</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>3ED262D6-895B-4B39-8A73-B6AFA2F9AF71</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>499539568.21792102</real>
		<key>FocussedWindowConditionType</key>
		<string>TitleMatches</string>
		<key>FocussedWindowTitle</key>
		<string> Tracks$</string>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>Window</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>NotifyOnFailure</key>
						<false/>
						<key>Path</key>
						<string></string>
						<key>StopOnFailure</key>
						<false/>
						<key>Text</key>
						<string>kme = Application("Keyboard Maestro Engine")
verbosity = kme.getvariable("fgVerbosity")
if (verbosity == "long") {
verbosity = "short"
} else verbosity = "long"
kme.setvariable("fgVerbosity", {to:verbosity})
vo = Application("VoiceOver")
vo.output("Verbosity: "+verbosity)</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>524257442.83415103</real>
				<key>ModificationDate</key>
				<real>524258159.53659302</real>
				<key>Name</key>
				<string>Toggle Vervosity</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>9</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2816</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>3A414ED7-A8B9-447F-8108-260624FBBD5E</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Flogic</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.apple.logic10</string>
					<key>Name</key>
					<string>Logic Pro X</string>
					<key>NewFile</key>
					<string>/Applications/Logic Pro X.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>5B52B143-96D5-42A8-BF6B-9D1E6FF1240F</string>
		<key>UID</key>
		<string>C52D9A0D-70FA-4012-B37E-ABE66F0A7841</string>
	</dict>
</array>
</plist>
